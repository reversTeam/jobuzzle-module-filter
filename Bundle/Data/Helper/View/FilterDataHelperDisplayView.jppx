/**************************************************************
*     ####         #                               #          * Jobuzzle - Copyright All rights reserved
*     ####         #                               #          *
*       ##  #####  ######  #     # ####### ####### #  #####   * @Author: revers
*       ## #     # #     # #     #      #       #  # #     #  *
*       ## #     # #     # #     #     #       #   # #     #  * @Date:   2015-10-09 16:31:36
*       ## #     # #     # #     #    #       #    # #     #  *
*       ## #     # #     # #     #   #       #     # ######   * @Last Modified by:   revers
*  ####### #     # #     # #     #  #       #      # #        *
*  ######   #####   ######  #####  ####### ####### # #######  * @Last Modified time: 2015-10-29 02:05:37
**************************************************************/

class FilterDataHelperDisplayView extends MasterHelperView {

	public _collectionName = 'Filter';
	public _routeForApi = 'filter';

	initialState : function () {
		var states = {};

		states['entities'] = this.getFilters();

		return states;
	}

	getFilters = function () {
		var self = this;
		var store = serviceLocator.get('ServiceManager').get('store_manager_main_service');
		var router = serviceLocator.get('Router');
		var filterCollection = store.getCollection(this.getCollectionName());
		var entity = this._template.getEntity();

		var entities = filterCollection.filterByParentEntityRoute(entity);

		if (!Object.keys(entities).length) {
			var self = this;
			store.request(router.entityRouteForApi(entity, this.getRouteForApi()), {}, function (datas) {
				entities = filterCollection.filterByParentEntityRoute(entity);
				self._template.setReady(true);
				self.setState({
					'entities' : entities
				})
			});
		} else
			this._template.setReady(true);

		return entities;
	}

	displayFilters : function (entities) {
		var self = this;
		var keys = Object.keys(entities);
		var entity = this._template.getEntity();

		return keys.map(function (i) {
			return <div>
				<div>
					{ self.getHelper('DisplaySkillLink', { entity : entities[i] }) }
				</div>
			</div>
		});
	}
 
	display : function () {
		var entities = this.state['entities'];

		return <div>
			{this.displayFilters(entities)}
		</div>
	}

	public getCollectionName : function () {
		return this['_collectionName'];
	}

	public setCollectionName : function (collectionName) {
		this['_collectionName'] = collectionName;

		return this;
	}

	public getRouteForApi : function () {
		return this['_routeForApi'];
	}

	public setRouteForApi : function (routeForApi) {
		this['_routeForApi'] = routeForApi;

		return this;
	}
}